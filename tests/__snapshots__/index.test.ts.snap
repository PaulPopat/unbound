// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser errors when namespace with no block 1`] = `
"Parsing Error:
Unexpected end of file
Line: undefined
Column: undefined"
`;

exports[`parser errors when no parameters section in a function 1`] = `
"Parsing Error:
Unexpected symbol. Expected one of '(' but received ':'
Line: 1
Column: 9"
`;

exports[`parser errors when spaces in a namespace name 1`] = `
"Parsing Error:
Unexpected symbol. Expected one of '{', '.' but received 'Name'
Line: 0
Column: 15"
`;

exports[`parser parses a empty exported schema 1`] = `
[
  {
    "contents": [
      {
        "exported": true,
        "location": {
          "last": {
            "column": 15,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [],
        "type": "schema_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty file 1`] = `[]`;

exports[`parser parses a empty function 1`] = `
[
  {
    "contents": [
      {
        "content": [],
        "exported": false,
        "location": {
          "last": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "parameters": [],
        "returns": {
          "location": {
            "last": {
              "column": 16,
              "line": 1,
            },
            "start": {
              "column": 13,
              "line": 1,
            },
          },
          "name": "int",
          "type": "reference_type",
        },
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty function with a single parameter 1`] = `
[
  {
    "contents": [
      {
        "content": [],
        "exported": false,
        "location": {
          "last": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "parameters": [
          {
            "location": {
              "last": {
                "column": 15,
                "line": 1,
              },
              "start": {
                "column": 11,
                "line": 1,
              },
            },
            "name": "test",
            "type": "function_parameter",
          },
        ],
        "returns": {
          "location": {
            "last": {
              "column": 27,
              "line": 1,
            },
            "start": {
              "column": 24,
              "line": 1,
            },
          },
          "name": "int",
          "type": "reference_type",
        },
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty function with multiple parameters 1`] = `
[
  {
    "contents": [
      {
        "content": [],
        "exported": false,
        "location": {
          "last": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "parameters": [
          {
            "location": {
              "last": {
                "column": 15,
                "line": 1,
              },
              "start": {
                "column": 11,
                "line": 1,
              },
            },
            "name": "test",
            "type": "function_parameter",
          },
          {
            "location": {
              "last": {
                "column": 28,
                "line": 1,
              },
              "start": {
                "column": 23,
                "line": 1,
              },
            },
            "name": "other",
            "type": "function_parameter",
          },
        ],
        "returns": {
          "location": {
            "last": {
              "column": 40,
              "line": 1,
            },
            "start": {
              "column": 37,
              "line": 1,
            },
          },
          "name": "int",
          "type": "reference_type",
        },
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty function with no return type 1`] = `
[
  {
    "contents": [
      {
        "content": [],
        "exported": false,
        "location": {
          "last": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "parameters": [],
        "returns": null,
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty namespace 1`] = `
[
  {
    "contents": [],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty public struct 1`] = `
[
  {
    "contents": [
      {
        "exported": true,
        "location": {
          "last": {
            "column": 15,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [],
        "type": "struct_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty schema 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [],
        "type": "schema_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a empty struct 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [],
        "type": "struct_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a exported empty function 1`] = `
[
  {
    "contents": [
      {
        "content": [],
        "exported": true,
        "location": {
          "last": {
            "column": 11,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "name": "Test",
        "parameters": [],
        "returns": {
          "location": {
            "last": {
              "column": 24,
              "line": 1,
            },
            "start": {
              "column": 21,
              "line": 1,
            },
          },
          "name": "int",
          "type": "reference_type",
        },
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a exported namespace 1`] = `
[
  {
    "contents": [],
    "exported": true,
    "location": {
      "last": {
        "column": 16,
        "line": 0,
      },
      "start": {
        "column": 7,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a linq 1`] = `
[
  {
    "contents": [
      {
        "content": [
          {
            "location": {
              "last": {
                "column": 10,
                "line": 2,
              },
              "start": {
                "column": 4,
                "line": 2,
              },
            },
            "type": "return_statement",
            "value": {
              "as": "item",
              "location": {
                "last": {
                  "column": 18,
                  "line": 2,
                },
                "start": {
                  "column": 11,
                  "line": 2,
                },
              },
              "over": {
                "location": {
                  "last": {
                    "column": 24,
                    "line": 2,
                  },
                  "start": {
                    "column": 20,
                    "line": 2,
                  },
                },
                "name": "self",
                "type": "reference_expression",
              },
              "type": "iterate_expression",
              "using": [
                {
                  "location": {
                    "last": {
                      "column": 12,
                      "line": 3,
                    },
                    "start": {
                      "column": 6,
                      "line": 3,
                    },
                  },
                  "type": "return_statement",
                  "value": {
                    "location": {
                      "last": {
                        "column": 27,
                        "line": 3,
                      },
                      "start": {
                        "column": 26,
                        "line": 3,
                      },
                    },
                    "parameters": [],
                    "subject": {
                      "location": {
                        "last": {
                          "column": 26,
                          "line": 3,
                        },
                        "start": {
                          "column": 18,
                          "line": 3,
                        },
                      },
                      "name": "selector",
                      "type": "reference_expression",
                    },
                    "type": "invokation_expression",
                  },
                },
              ],
            },
          },
        ],
        "exported": true,
        "location": {
          "last": {
            "column": 11,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "name": "select",
        "parameters": [
          {
            "location": {
              "last": {
                "column": 23,
                "line": 1,
              },
              "start": {
                "column": 19,
                "line": 1,
              },
            },
            "name": "self",
            "type": "function_parameter",
          },
          {
            "location": {
              "last": {
                "column": 48,
                "line": 1,
              },
              "start": {
                "column": 40,
                "line": 1,
              },
            },
            "name": "selector",
            "type": "function_parameter",
          },
        ],
        "returns": {
          "location": {
            "last": {
              "column": 78,
              "line": 1,
            },
            "start": {
              "column": 77,
              "line": 1,
            },
          },
          "type": "iterable_type",
        },
        "type": "function_entity",
      },
      {
        "content": [
          {
            "location": {
              "last": {
                "column": 10,
                "line": 8,
              },
              "start": {
                "column": 4,
                "line": 8,
              },
            },
            "type": "return_statement",
            "value": {
              "as": "item",
              "location": {
                "last": {
                  "column": 18,
                  "line": 8,
                },
                "start": {
                  "column": 11,
                  "line": 8,
                },
              },
              "over": {
                "location": {
                  "last": {
                    "column": 24,
                    "line": 8,
                  },
                  "start": {
                    "column": 20,
                    "line": 8,
                  },
                },
                "name": "self",
                "type": "reference_expression",
              },
              "type": "iterate_expression",
              "using": [
                {
                  "location": {
                    "last": {
                      "column": 12,
                      "line": 9,
                    },
                    "start": {
                      "column": 6,
                      "line": 9,
                    },
                  },
                  "type": "return_statement",
                  "value": {
                    "check": {
                      "location": {
                        "last": {
                          "column": 32,
                          "line": 9,
                        },
                        "start": {
                          "column": 31,
                          "line": 9,
                        },
                      },
                      "parameters": [],
                      "subject": {
                        "location": {
                          "last": {
                            "column": 31,
                            "line": 9,
                          },
                          "start": {
                            "column": 22,
                            "line": 9,
                          },
                        },
                        "name": "predicate",
                        "type": "reference_expression",
                      },
                      "type": "invokation_expression",
                    },
                    "else": [
                      {
                        "location": {
                          "last": {
                            "column": 14,
                            "line": 12,
                          },
                          "start": {
                            "column": 8,
                            "line": 12,
                          },
                        },
                        "type": "return_statement",
                        "value": {
                          "location": {
                            "last": {
                              "column": 19,
                              "line": 12,
                            },
                            "start": {
                              "column": 15,
                              "line": 12,
                            },
                          },
                          "name": "skip",
                          "type": "reference_expression",
                        },
                      },
                    ],
                    "if": [
                      {
                        "location": {
                          "last": {
                            "column": 14,
                            "line": 10,
                          },
                          "start": {
                            "column": 8,
                            "line": 10,
                          },
                        },
                        "type": "return_statement",
                        "value": {
                          "location": {
                            "last": {
                              "column": 19,
                              "line": 10,
                            },
                            "start": {
                              "column": 15,
                              "line": 10,
                            },
                          },
                          "name": "item",
                          "type": "reference_expression",
                        },
                      },
                    ],
                    "location": {
                      "last": {
                        "column": 15,
                        "line": 9,
                      },
                      "start": {
                        "column": 13,
                        "line": 9,
                      },
                    },
                    "type": "if_expression",
                  },
                },
              ],
            },
          },
        ],
        "exported": true,
        "location": {
          "last": {
            "column": 11,
            "line": 7,
          },
          "start": {
            "column": 9,
            "line": 7,
          },
        },
        "name": "where",
        "parameters": [
          {
            "location": {
              "last": {
                "column": 22,
                "line": 7,
              },
              "start": {
                "column": 18,
                "line": 7,
              },
            },
            "name": "self",
            "type": "function_parameter",
          },
          {
            "location": {
              "last": {
                "column": 48,
                "line": 7,
              },
              "start": {
                "column": 39,
                "line": 7,
              },
            },
            "name": "predicate",
            "type": "function_parameter",
          },
        ],
        "returns": {
          "location": {
            "last": {
              "column": 71,
              "line": 7,
            },
            "start": {
              "column": 70,
              "line": 7,
            },
          },
          "type": "iterable_type",
        },
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Linq",
    "type": "namespace",
  },
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 7,
            "line": 19,
          },
          "start": {
            "column": 2,
            "line": 19,
          },
        },
        "name": "Linq",
        "type": "using_entity",
      },
      {
        "exported": true,
        "location": {
          "last": {
            "column": 15,
            "line": 21,
          },
          "start": {
            "column": 9,
            "line": 21,
          },
        },
        "name": "User",
        "properties": [
          {
            "location": {
              "last": {
                "column": 12,
                "line": 22,
              },
              "start": {
                "column": 4,
                "line": 22,
              },
            },
            "name": "username",
            "type": "property",
          },
        ],
        "type": "struct_entity",
      },
      {
        "content": [
          {
            "location": {
              "last": {
                "column": 10,
                "line": 26,
              },
              "start": {
                "column": 4,
                "line": 26,
              },
            },
            "type": "return_statement",
            "value": {
              "location": {
                "last": {
                  "column": 23,
                  "line": 27,
                },
                "start": {
                  "column": 22,
                  "line": 27,
                },
              },
              "parameters": [
                {
                  "expression": {
                    "location": {
                      "last": {
                        "column": 40,
                        "line": 27,
                      },
                      "start": {
                        "column": 36,
                        "line": 27,
                      },
                    },
                    "struct": "User",
                    "type": "make_expression",
                    "using": [
                      {
                        "equals": {
                          "location": {
                            "last": {
                              "column": 67,
                              "line": 28,
                            },
                            "start": {
                              "column": 36,
                              "line": 28,
                            },
                          },
                          "type": "literal_expression",
                          "value": "Do I really need to say this?",
                        },
                        "location": {
                          "last": {
                            "column": 24,
                            "line": 28,
                          },
                          "start": {
                            "column": 18,
                            "line": 28,
                          },
                        },
                        "name": "username",
                        "type": "assign_statement",
                      },
                    ],
                  },
                  "location": {
                    "last": {
                      "column": 25,
                      "line": 27,
                    },
                    "start": {
                      "column": 23,
                      "line": 27,
                    },
                  },
                  "parameters": [
                    {
                      "location": {
                        "last": {
                          "column": 31,
                          "line": 27,
                        },
                        "start": {
                          "column": 27,
                          "line": 27,
                        },
                      },
                      "name": "user",
                      "type": "function_parameter",
                    },
                  ],
                  "type": "lambda_expression",
                },
              ],
              "subject": {
                "location": {
                  "last": {
                    "column": 22,
                    "line": 27,
                  },
                  "start": {
                    "column": 16,
                    "line": 27,
                  },
                },
                "name": "select",
                "type": "reference_expression",
              },
              "type": "invokation_expression",
            },
          },
        ],
        "exported": true,
        "location": {
          "last": {
            "column": 11,
            "line": 25,
          },
          "start": {
            "column": 9,
            "line": 25,
          },
        },
        "name": "sort_users",
        "parameters": [
          {
            "location": {
              "last": {
                "column": 27,
                "line": 25,
              },
              "start": {
                "column": 23,
                "line": 25,
              },
            },
            "name": "self",
            "type": "function_parameter",
          },
        ],
        "returns": null,
        "type": "function_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 18,
      },
      "start": {
        "column": 0,
        "line": 18,
      },
    },
    "name": "LinqUser",
    "type": "namespace",
  },
]
`;

exports[`parser parses a schema with a single property 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [
          {
            "location": {
              "last": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 4,
                "line": 2,
              },
            },
            "name": "test",
            "type": "property",
          },
        ],
        "type": "schema_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a schema with two parameters 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [
          {
            "location": {
              "last": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 4,
                "line": 2,
              },
            },
            "name": "test",
            "type": "property",
          },
          {
            "location": {
              "last": {
                "column": 9,
                "line": 3,
              },
              "start": {
                "column": 4,
                "line": 3,
              },
            },
            "name": "other",
            "type": "property",
          },
        ],
        "type": "schema_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a struct with a single property 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [
          {
            "location": {
              "last": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 4,
                "line": 2,
              },
            },
            "name": "test",
            "type": "property",
          },
        ],
        "type": "struct_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a struct with two properties 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 8,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Test",
        "properties": [
          {
            "location": {
              "last": {
                "column": 8,
                "line": 2,
              },
              "start": {
                "column": 4,
                "line": 2,
              },
            },
            "name": "test",
            "type": "property",
          },
          {
            "location": {
              "last": {
                "column": 9,
                "line": 3,
              },
              "start": {
                "column": 4,
                "line": 3,
              },
            },
            "name": "other",
            "type": "property",
          },
        ],
        "type": "struct_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;

exports[`parser parses a using entity 1`] = `
[
  {
    "contents": [
      {
        "exported": false,
        "location": {
          "last": {
            "column": 7,
            "line": 1,
          },
          "start": {
            "column": 2,
            "line": 1,
          },
        },
        "name": "Other",
        "type": "using_entity",
      },
    ],
    "exported": false,
    "location": {
      "last": {
        "column": 9,
        "line": 0,
      },
      "start": {
        "column": 0,
        "line": 0,
      },
    },
    "name": "Test",
    "type": "namespace",
  },
]
`;
